name: Build rtp2httpd for ImmortalWrt

on:
  push:
    branches: [ main ]
    paths:
      - 'openwrt-support/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'openwrt-support/**'
  workflow_dispatch:  # 用于手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, aarch64_cortex-a72]
        
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 设置构建环境
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex bison g++ gawk \
        gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev \
        python3-distutils rsync unzip zlib1g-dev file wget
    
    - name: 释放磁盘空间
      run: |
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo apt clean
        
    - name: 克隆 ImmortalWrt
      run: |
        git clone https://github.com/immortalwrt/immortalwrt.git
        cd immortalwrt
        git checkout master  # 使用master分支 (24.10版本)
        
    - name: 更新feeds
      run: |
        cd immortalwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
    - name: 克隆 rtp2httpd 仓库
      run: |
        git clone https://github.com/stackia/rtp2httpd.git
        
    - name: 创建软件包目录
      run: |
        mkdir -p immortalwrt/package/rtp2httpd
        cp -r rtp2httpd/openwrt-support/* immortalwrt/package/rtp2httpd/
        
    - name: 设置特定架构配置
      run: |
        cd immortalwrt
        
        # 重置配置为最小默认值
        echo 'CONFIG_TARGET_ROOTFS_TARGZ=y' > .config
        
        if [ "${{ matrix.arch }}" = "x64" ]; then
          echo 'CONFIG_TARGET_x86=y' >> .config
          echo 'CONFIG_TARGET_x86_64=y' >> .config
          echo 'CONFIG_TARGET_ROOTFS_EXT4FS=y' >> .config
          echo 'CONFIG_TARGET_IMAGES_GZIP=y' >> .config
        elif [ "${{ matrix.arch }}" = "aarch64_cortex-a72" ]; then
          echo 'CONFIG_TARGET_armsr=y' >> .config
          echo 'CONFIG_TARGET_armsr_armv8=y' >> .config
          echo 'CONFIG_TARGET_armsr_armv8_DEVICE_generic=y' >> .config
          echo 'CONFIG_ARCH_64BIT=y' >> .config
          echo 'CONFIG_HAS_SUBTARGETS=y' >> .config
          echo 'CONFIG_CPU_TYPE="cortex-a72"' >> .config
        fi
        
        # 启用APK包管理器(ImmortalWrt 24.10已弃用OPKG)
        echo 'CONFIG_PACKAGE_apk=y' >> .config
        
        # 启用我们的包
        echo 'CONFIG_PACKAGE_rtp2httpd=y' >> .config
        
        # 扩展配置
        make defconfig
        
    - name: 构建
      run: |
        cd immortalwrt
        make package/rtp2httpd/compile -j$(nproc) V=s
        
    - name: 整理构建产物
      run: |
        mkdir -p output/${{ matrix.arch }}
        
        if [ "${{ matrix.arch }}" = "x64" ]; then
          # 查找ipk或apk格式的包
          find immortalwrt/bin/packages/x86_64 -name "rtp2httpd*.ipk" -o -name "rtp2httpd*.apk" -type f -exec cp {} output/${{ matrix.arch }}/ \;
        elif [ "${{ matrix.arch }}" = "aarch64_cortex-a72" ]; then
          # 查找ipk或apk格式的包
          find immortalwrt/bin/packages/aarch64_cortex-a72 -name "rtp2httpd*.ipk" -o -name "rtp2httpd*.apk" -type f -exec cp {} output/${{ matrix.arch }}/ \;
        fi
        
    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: rtp2httpd-immortalwrt-${{ matrix.arch }}
        path: output/${{ matrix.arch }}
        retention-days: 7

    - name: 在标签时创建发布版本
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: output/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
