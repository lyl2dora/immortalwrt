name: ImmortalWRT APK Release
on:
  workflow_dispatch:  # 允许手动触发
  push:
    paths:
      - 'openwrt-support/**'  # 当 openwrt-support 路径有更改时触发

jobs:
  build:
    name: ${{ matrix.arch }}-${{ matrix.sdk }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - aarch64_cortex-a72
        sdk:
          - "24.10"
    steps:
      - uses: actions/checkout@v4
        with:
          repository: stackia/rtp2httpd
          
      - name: Override version number
        run: |
          RELEASE_TAG="${{ github.ref_name }}"
          RELEASE_VERSION="${RELEASE_TAG#v}"
          # 如果不是从 release 触发，使用日期作为版本号
          if [[ "$RELEASE_TAG" == "$RELEASE_VERSION" ]]; then
            RELEASE_VERSION="$(date +%Y%m%d)"
          fi
          sed -i "s/1\.0\.0/${RELEASE_VERSION}/g" openwrt-support/rtp2httpd/Makefile openwrt-support/luci-app-rtp2httpd/Makefile configure.ac
          
      - name: Move src to openwrt-support
        run: mv openwrt-support ../ && mkdir ../openwrt-support/rtp2httpd/src && mv ./* ../openwrt-support/rtp2httpd/src && mv ../openwrt-support ./
        
      - name: Build
        uses: openwrt/gh-action-sdk@v7
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.sdk }}
          FEED_DIR: ${{ github.workspace }}/openwrt-support
          SDK_SRC: immortalwrt
          NO_SHFMT_CHECK: true
          PACKAGES: ${{ matrix.arch == 'x86_64' && 'luci-app-rtp2httpd' || 'rtp2httpd' }}
          BUILD_APK: true  # 启用 APK 构建而不是 IPK
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ${{ matrix.arch }}-apk-packages
          path: bin/packages/${{ matrix.arch }}/action/*.apk
          
      - name: Upload to release assets
        if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/v')
        run: |
          # 如果是从标签触发则上传到对应的 release
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG="${{ github.ref_name }}"
            gh release upload --repo ${{ github.repository }} $TAG bin/packages/${{ matrix.arch }}/action/*.apk
          else
            # 如果是手动触发或 push 触发则创建新的 release
            RELEASE_DATE="$(date +%Y%m%d)"
            RELEASE_NAME="Build-${RELEASE_DATE}"
            gh release create "build-${RELEASE_DATE}" --title "${RELEASE_NAME}" --repo ${{ github.repository }} bin/packages/${{ matrix.arch }}/action/*.apk
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
